Create 2 EC-2 (Ubuntu, T2.Medium with 20gb CPU) 1- VM
              2- MONITORING
Connect MONITORING Server and downloand and setup these below requirenments:-

SETUP PROMETHEUS

wget https://github.com/prometheus/prometheus/releases/download/v2.53.1/prometheus-2.53.1.linux-amd64.tar.gz
unzip and move

SETUP BLACKBOX_EXPORTER

wget https://github.com/prometheus/consul_exporter/releases/download/v0.12.0/consul_exporter-0.12.0.linux-amd64.tar.gz
unzip ans rename

SETUP ALERT_MANAGER

wget https://github.com/prometheus/alertmanager/releases/download/v0.27.0/alertmanager-0.27.0.linux-amd64.tar.gz
unzip and rename

Connect VM Server download ans setup:-

git clone (repository url of project Boardgame)
wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz
unzip and rename
Go inside node_exporter
./node_exporter &              #to execute and (&) it is for to run in backgroung, by default it runs in port number 9100
copy Public IP of VM Server with 9100 and browse it. It should and and we can check metrics aswell.

SETUP JAVA AND MAVEN
cd ..
Go inside Boardgame application and then
Downloand java
apt install maven -y
mvn package       # to build the project
ls
cd target/
java -jar (name of the jar file)          #To extract jar file
Copy Public IP of Server and browse with port 8080, website should run


NOW SWITCH TO MONITORING SERVER

ls
cd prometheus
ls
./ prometheus & 
Copy public IP of same server and browse with port 9090
Now check in prometheus website:-
status
targets
status 
rules   #As we checked we did have rules set fot alert now we will set alert rules
Get out of promrtheus
cd ..
ls
cd alert_manager
ls
check yml file
vi (name of yml file)
now we will setup alert rules for that we have to go inside prometheus again
cd ..
ls
cd prometheus            #make one file to setup rules in prometheus
vi alert_rules.yml
*******************YML FILE STARTED***********************

---
groups:
  - name: instance_down_alerts
    rules:
      - alert: InstanceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: Instance {{ $labels.instance }} down
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for
            more than 1 minute."
      - alert: WebsiteDown
        expr: probe_success == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Website {{ $labels.instance }} is down
          description: The website {{ $labels.instance }} has been unreachable for more
            than 5 minutes.
      - alert: HostOutOfMemory
        expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) < 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Host out of memory (instance {{ $labels.instance }})
          description: Host {{ $labels.instance }} has less than 5% memory available for
            more than 5 minutes.
      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes{mountpoint="/"} /
          node_filesystem_size_bytes{mountpoint="/"}) < 0.10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Host out of disk space (instance {{ $labels.instance }})
          description: Host {{ $labels.instance }} has less than 10% disk space available
            for more than 5 minutes.
      - alert: HostHighCpuLoad
        expr: avg(node_load1) by (instance) / count(node_cpu_seconds_total{mode="idle"})
          by (instance) > 0.85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Host high CPU load (instance {{ $labels.instance }})
          description: Host {{ $labels.instance }} has a high CPU load (1-minute load
            average is over 85% of total CPU capacity) for more than 5 minutes.
      - alert: ServiceUnavailable
        expr: probe_success == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Service is unavailable (instance {{ $labels.instance }})
          description: The service {{ $labels.instance }} has been unavailable for more
            than 5 minutes.
      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) /
          node_memory_MemTotal_bytes > 0.90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: Host high memory usage (instance {{ $labels.instance }})
          description: Host {{ $labels.instance }} is using more than 90% of its memory
            for more than 5 minutes.
      - alert: FileSystemFull
        expr: (node_filesystem_size_bytes{fstype!~"tmpfs|aufs|overlay"} -
          node_filesystem_free_bytes{fstype!~"tmpfs|aufs|overlay"}) /
          node_filesystem_size_bytes{fstype!~"tmpfs|aufs|overlay"} > 0.90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: Filesystem nearly full (instance {{ $labels.instance }})
          description: The filesystem on {{ $labels.instance }} is more than 90% full for
            more than 5 minutes.

*********************YML FILE ENDED****************************


Verify yml file in YAMLINT Validator then copy and paste in vi alert_rules.yml file and save.
Now go to vi prometheus.yml
In rule file sections uncomment, edit and give file name (alert_rule.yml)
save
cd ..
cd alert_manager 
./alert_manager &
Now copy Public IP with port exposed 9093 and browse
Here we can check status as well as alert rules
Now we have to restart pometheus cd ..
ls
cd prometheus
ls
pgerp prometheus
kill proccess id 
./prometheus &
Go back to prometheus page in browser and refresh the page check alert rules it should visible now.



###################
---
- job_name: node-exporter
  static_configs:
    - targets:
        - 52.63.132.65:9100
#####################



